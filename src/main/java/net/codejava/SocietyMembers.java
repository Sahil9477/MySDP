package net.codejava;

import javax.persistence.Entity;
import javax.persistence.Id;

@Entity
public class SocietyMembers {
	//below contain the properties for a member of society
	
	private String member_name;
	private String phone_num;
	private String society_name;
	private String house_id;
	private boolean ownership_status=false; //true if its owner , false if its tenant situation
	private String renter_name=null; //initially it is assumed that there is no tenant situation
	@Id
	private String unique_id ; // we dont have the setter fxn for this because it will be autogenerated
	public SocietyMembers(String member_name, String phone_num, String society_name, String house_id,
			boolean ownership_status, String renter_name) {
		
		super();
		this.member_name = member_name;
		this.phone_num = phone_num;
		this.society_name = society_name;
		this.house_id = house_id;
		this.ownership_status = ownership_status;
		this.renter_name = renter_name;
		
		//auto-generating the unique society member's id
		
		//unique_id =  "SM-"+RandGeneratedStr(8);
	}
	public SocietyMembers() {
		super();
		// TODO Auto-generated constructor stub
	}
	public String getMember_name() {
		return member_name;
	}
	public void setMember_name(String member_name) {
		this.member_name = member_name;
	}
	public String getPhone_num() {
		return phone_num;
	}
	public void setPhone_num(String phone_num) {
		this.phone_num = phone_num;
	}
	public String getSociety_name() {
		return society_name;
	}
	public void setSociety_name(String society_name) {
		this.society_name = society_name;
	}
	public String getHouse_id() {
		return house_id;
	}
	public void setHouse_id(String house_id) {
		this.house_id = house_id;
	}
	public boolean isOwnership_status() {
		return ownership_status;
	}
	public void setOwnership_status(boolean ownership_status) {
		this.ownership_status = ownership_status;
	}
	public String getRenter_name() {
		return renter_name;
	}
	public void setRenter_name(String renter_name) {
		this.renter_name = renter_name;
	}
	@Override
	public String toString() {
		return "SocietyMembers [member_name=" + member_name + ", phone_num=" + phone_num + ", society_name="
				+ society_name + ", house_id=" + house_id + ", ownership_status=" + ownership_status + ", renter_name="
				+ renter_name + "]";
	}
	public String getUnique_id() {
		return unique_id;
	}
		
	static String RandGeneratedStr(int l)
	 {
	 // a list of characters to choose from in form of a string
	 String AlphaNumericStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvxyz0123456789";
	 // creating a StringBuffer size of AlphaNumericStr
	 StringBuilder s = new StringBuilder(l);
	 int i;
	 for ( i=0; i<l; i++) {
	   //generating a random number using math.random()
	   int ch = (int)(AlphaNumericStr.length() * Math.random());
	   //adding Random character one by one at the end of s
	   s.append(AlphaNumericStr.charAt(ch));
	  }
 return s.toString();
}

	
}